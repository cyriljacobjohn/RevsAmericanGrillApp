# Generated by Django 4.1.3 on 2022-12-04 04:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('ManagerApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('itemname', models.CharField(max_length=50)),
                ('itemcount', models.IntegerField()),
                ('itemfcount', models.IntegerField()),
                ('itemcode', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'inventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lowinventory',
            fields=[
                ('priority_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lowinventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('menuitem', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ingredients', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderdetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(blank=True, null=True)),
                ('food_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orderdetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderhistory',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_stamp', models.DateTimeField()),
                ('pricetotal', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                'db_table': 'orderhistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, verbose_name='User Name')),
                ('first_name', models.CharField(max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last Name')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='TestModel',
        ),
    ]
